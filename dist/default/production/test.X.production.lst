

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jul 16 08:39:16 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4523
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/01/2025 GMT
    21                           ; 
    22                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4523 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000FE0                     bsr             equ	4064
    55   000FE9                     fsr0            equ	4073
    56   000FEA                     fsr0h           equ	4074
    57   000FE9                     fsr0l           equ	4073
    58   000FE1                     fsr1            equ	4065
    59   000FE2                     fsr1h           equ	4066
    60   000FE1                     fsr1l           equ	4065
    61   000FD9                     fsr2            equ	4057
    62   000FDA                     fsr2h           equ	4058
    63   000FD9                     fsr2l           equ	4057
    64   000FEF                     indf0           equ	4079
    65   000FE7                     indf1           equ	4071
    66   000FDF                     indf2           equ	4063
    67   000FF2                     intcon          equ	4082
    68   000000                     nvmcon          equ	0
    69   000FF9                     pcl             equ	4089
    70   000FFA                     pclath          equ	4090
    71   000FFB                     pclatu          equ	4091
    72   000FEB                     plusw0          equ	4075
    73   000FE3                     plusw1          equ	4067
    74   000FDB                     plusw2          equ	4059
    75   000FED                     postdec0        equ	4077
    76   000FE5                     postdec1        equ	4069
    77   000FDD                     postdec2        equ	4061
    78   000FEE                     postinc0        equ	4078
    79   000FE6                     postinc1        equ	4070
    80   000FDE                     postinc2        equ	4062
    81   000FEC                     preinc0         equ	4076
    82   000FE4                     preinc1         equ	4068
    83   000FDC                     preinc2         equ	4060
    84   000FF3                     prod            equ	4083
    85   000FF4                     prodh           equ	4084
    86   000FF3                     prodl           equ	4083
    87   000FD8                     status          equ	4056
    88   000FF5                     tablat          equ	4085
    89   000FF6                     tblptr          equ	4086
    90   000FF7                     tblptrh         equ	4087
    91   000FF6                     tblptrl         equ	4086
    92   000FF8                     tblptru         equ	4088
    93   000FFD                     tosl            equ	4093
    94   000FE8                     wreg            equ	4072
    95   000F80                     PORTA           equ	3968	;# 
    96   000F81                     PORTB           equ	3969	;# 
    97   000F82                     PORTC           equ	3970	;# 
    98   000F83                     PORTD           equ	3971	;# 
    99   000F84                     PORTE           equ	3972	;# 
   100   000F89                     LATA            equ	3977	;# 
   101   000F8A                     LATB            equ	3978	;# 
   102   000F8B                     LATC            equ	3979	;# 
   103   000F8C                     LATD            equ	3980	;# 
   104   000F8D                     LATE            equ	3981	;# 
   105   000F92                     TRISA           equ	3986	;# 
   106   000F92                     DDRA            equ	3986	;# 
   107   000F93                     TRISB           equ	3987	;# 
   108   000F93                     DDRB            equ	3987	;# 
   109   000F94                     TRISC           equ	3988	;# 
   110   000F94                     DDRC            equ	3988	;# 
   111   000F95                     TRISD           equ	3989	;# 
   112   000F95                     DDRD            equ	3989	;# 
   113   000F96                     TRISE           equ	3990	;# 
   114   000F96                     DDRE            equ	3990	;# 
   115   000F9B                     OSCTUNE         equ	3995	;# 
   116   000F9D                     PIE1            equ	3997	;# 
   117   000F9E                     PIR1            equ	3998	;# 
   118   000F9F                     IPR1            equ	3999	;# 
   119   000FA0                     PIE2            equ	4000	;# 
   120   000FA1                     PIR2            equ	4001	;# 
   121   000FA2                     IPR2            equ	4002	;# 
   122   000FA6                     EECON1          equ	4006	;# 
   123   000FA7                     EECON2          equ	4007	;# 
   124   000FA8                     EEDATA          equ	4008	;# 
   125   000FA9                     EEADR           equ	4009	;# 
   126   000FAB                     RCSTA           equ	4011	;# 
   127   000FAB                     RCSTA1          equ	4011	;# 
   128   000FAC                     TXSTA           equ	4012	;# 
   129   000FAC                     TXSTA1          equ	4012	;# 
   130   000FAD                     TXREG           equ	4013	;# 
   131   000FAD                     TXREG1          equ	4013	;# 
   132   000FAE                     RCREG           equ	4014	;# 
   133   000FAE                     RCREG1          equ	4014	;# 
   134   000FAF                     SPBRG           equ	4015	;# 
   135   000FAF                     SPBRG1          equ	4015	;# 
   136   000FB0                     SPBRGH          equ	4016	;# 
   137   000FB1                     T3CON           equ	4017	;# 
   138   000FB2                     TMR3            equ	4018	;# 
   139   000FB2                     TMR3L           equ	4018	;# 
   140   000FB3                     TMR3H           equ	4019	;# 
   141   000FB4                     CMCON           equ	4020	;# 
   142   000FB5                     CVRCON          equ	4021	;# 
   143   000FB6                     ECCP1AS         equ	4022	;# 
   144   000FB6                     ECCPAS          equ	4022	;# 
   145   000FB7                     PWM1CON         equ	4023	;# 
   146   000FB7                     ECCP1DEL        equ	4023	;# 
   147   000FB8                     BAUDCON         equ	4024	;# 
   148   000FB8                     BAUDCTL         equ	4024	;# 
   149   000FBA                     CCP2CON         equ	4026	;# 
   150   000FBB                     CCPR2           equ	4027	;# 
   151   000FBB                     CCPR2L          equ	4027	;# 
   152   000FBC                     CCPR2H          equ	4028	;# 
   153   000FBD                     CCP1CON         equ	4029	;# 
   154   000FBE                     CCPR1           equ	4030	;# 
   155   000FBE                     CCPR1L          equ	4030	;# 
   156   000FBF                     CCPR1H          equ	4031	;# 
   157   000FC0                     ADCON2          equ	4032	;# 
   158   000FC1                     ADCON1          equ	4033	;# 
   159   000FC2                     ADCON0          equ	4034	;# 
   160   000FC3                     ADRES           equ	4035	;# 
   161   000FC3                     ADRESL          equ	4035	;# 
   162   000FC4                     ADRESH          equ	4036	;# 
   163   000FC5                     SSPCON2         equ	4037	;# 
   164   000FC6                     SSPCON1         equ	4038	;# 
   165   000FC7                     SSPSTAT         equ	4039	;# 
   166   000FC8                     SSPADD          equ	4040	;# 
   167   000FC9                     SSPBUF          equ	4041	;# 
   168   000FCA                     T2CON           equ	4042	;# 
   169   000FCB                     PR2             equ	4043	;# 
   170   000FCB                     MEMCON          equ	4043	;# 
   171   000FCC                     TMR2            equ	4044	;# 
   172   000FCD                     T1CON           equ	4045	;# 
   173   000FCE                     TMR1            equ	4046	;# 
   174   000FCE                     TMR1L           equ	4046	;# 
   175   000FCF                     TMR1H           equ	4047	;# 
   176   000FD0                     RCON            equ	4048	;# 
   177   000FD1                     WDTCON          equ	4049	;# 
   178   000FD2                     HLVDCON         equ	4050	;# 
   179   000FD2                     LVDCON          equ	4050	;# 
   180   000FD3                     OSCCON          equ	4051	;# 
   181   000FD5                     T0CON           equ	4053	;# 
   182   000FD6                     TMR0            equ	4054	;# 
   183   000FD6                     TMR0L           equ	4054	;# 
   184   000FD7                     TMR0H           equ	4055	;# 
   185   000FD8                     STATUS          equ	4056	;# 
   186   000FD9                     FSR2            equ	4057	;# 
   187   000FD9                     FSR2L           equ	4057	;# 
   188   000FDA                     FSR2H           equ	4058	;# 
   189   000FDB                     PLUSW2          equ	4059	;# 
   190   000FDC                     PREINC2         equ	4060	;# 
   191   000FDD                     POSTDEC2        equ	4061	;# 
   192   000FDE                     POSTINC2        equ	4062	;# 
   193   000FDF                     INDF2           equ	4063	;# 
   194   000FE0                     BSR             equ	4064	;# 
   195   000FE1                     FSR1            equ	4065	;# 
   196   000FE1                     FSR1L           equ	4065	;# 
   197   000FE2                     FSR1H           equ	4066	;# 
   198   000FE3                     PLUSW1          equ	4067	;# 
   199   000FE4                     PREINC1         equ	4068	;# 
   200   000FE5                     POSTDEC1        equ	4069	;# 
   201   000FE6                     POSTINC1        equ	4070	;# 
   202   000FE7                     INDF1           equ	4071	;# 
   203   000FE8                     WREG            equ	4072	;# 
   204   000FE9                     FSR0            equ	4073	;# 
   205   000FE9                     FSR0L           equ	4073	;# 
   206   000FEA                     FSR0H           equ	4074	;# 
   207   000FEB                     PLUSW0          equ	4075	;# 
   208   000FEC                     PREINC0         equ	4076	;# 
   209   000FED                     POSTDEC0        equ	4077	;# 
   210   000FEE                     POSTINC0        equ	4078	;# 
   211   000FEF                     INDF0           equ	4079	;# 
   212   000FF0                     INTCON3         equ	4080	;# 
   213   000FF1                     INTCON2         equ	4081	;# 
   214   000FF2                     INTCON          equ	4082	;# 
   215   000FF3                     PROD            equ	4083	;# 
   216   000FF3                     PRODL           equ	4083	;# 
   217   000FF4                     PRODH           equ	4084	;# 
   218   000FF5                     TABLAT          equ	4085	;# 
   219   000FF6                     TBLPTR          equ	4086	;# 
   220   000FF6                     TBLPTRL         equ	4086	;# 
   221   000FF7                     TBLPTRH         equ	4087	;# 
   222   000FF8                     TBLPTRU         equ	4088	;# 
   223   000FF9                     PCLAT           equ	4089	;# 
   224   000FF9                     PC              equ	4089	;# 
   225   000FF9                     PCL             equ	4089	;# 
   226   000FFA                     PCLATH          equ	4090	;# 
   227   000FFB                     PCLATU          equ	4091	;# 
   228   000FFC                     STKPTR          equ	4092	;# 
   229   000FFD                     TOS             equ	4093	;# 
   230   000FFD                     TOSL            equ	4093	;# 
   231   000FFE                     TOSH            equ	4094	;# 
   232   000FFF                     TOSU            equ	4095	;# 
   233   007C1D                     _RD5            set	31773
   234   007C1C                     _RD4            set	31772
   235   007C1B                     _RD3            set	31771
   236   007C1A                     _RD2            set	31770
   237   007C19                     _RD1            set	31769
   238   007C18                     _RD0            set	31768
   239   000FF1                     _INTCON2bits    set	4081
   240   000F93                     _TRISBbits      set	3987
   241   000F83                     _PORTD          set	3971
   242   000F95                     _TRISD          set	3989
   243   000FF0                     _INTCON3bits    set	4080
   244   000FF2                     _INTCONbits     set	4082
   245   000FC3                     _ADRESL         set	4035
   246   000FC4                     _ADRESH         set	4036
   247   000FC0                     _ADCON2bits     set	4032
   248   000FC1                     _ADCON1         set	4033
   249   000FC2                     _ADCON0bits     set	4034
   250   000F92                     _TRISAbits      set	3986
   251                           
   252                           ; #config settings
   253                           
   254                           	psect	cinit
   255   00073A                     __pcinit:
   256                           	callstack 0
   257   00073A                     start_initialization:
   258                           	callstack 0
   259   00073A                     __initialization:
   260                           	callstack 0
   261                           
   262                           ; Clear objects allocated to COMRAM (6 bytes)
   263   00073A  6A19               	clrf	(__pbssCOMRAM+5)& (0+255),c
   264   00073C  6A18               	clrf	(__pbssCOMRAM+4)& (0+255),c
   265   00073E  6A17               	clrf	(__pbssCOMRAM+3)& (0+255),c
   266   000740  6A16               	clrf	(__pbssCOMRAM+2)& (0+255),c
   267   000742  6A15               	clrf	(__pbssCOMRAM+1)& (0+255),c
   268   000744  6A14               	clrf	__pbssCOMRAM& (0+255),c
   269   000746                     end_of_initialization:
   270                           	callstack 0
   271   000746                     __end_of__initialization:
   272                           	callstack 0
   273   000746  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274   000748  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275   00074A  0100               	movlb	0
   276   00074C  EF61  F003         	goto	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMRAM
   279   000014                     __pbssCOMRAM:
   280                           	callstack 0
   281   000014                     _toggleT:
   282                           	callstack 0
   283   000014                     	ds	2
   284   000016                     _toggleS:
   285                           	callstack 0
   286   000016                     	ds	2
   287   000018                     _toggleR:
   288                           	callstack 0
   289   000018                     	ds	2
   290                           
   291                           	psect	cstackCOMRAM
   292   000001                     __pcstackCOMRAM:
   293                           	callstack 0
   294   000001                     ?_read_adc:
   295                           	callstack 0
   296   000001                     ?___lwdiv:
   297                           	callstack 0
   298   000001                     delay_ms@ms:
   299                           	callstack 0
   300   000001                     ___lwdiv@dividend:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x0
   304   000001                     	ds	2
   305   000003                     delay_ms@i:
   306                           	callstack 0
   307   000003                     ___lwdiv@divisor:
   308                           	callstack 0
   309   000003                     ??_read_adc:
   310   000003                     
   311                           ; 1 bytes @ 0x2
   312   000003                     	ds	2
   313   000005                     delay_ms@j:
   314                           	callstack 0
   315   000005                     ___lwdiv@quotient:
   316                           	callstack 0
   317   000005                     
   318                           ; 1 bytes @ 0x4
   319   000005                     	ds	2
   320   000007                     ___lwdiv@counter:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x6
   324   000007                     	ds	1
   325   000008                     ??_ISR:
   326                           
   327                           ; 1 bytes @ 0x7
   328   000008                     	ds	4
   329   00000C                     ISR@adc_value:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0xB
   333   00000C                     	ds	2
   334   00000E                     ISR@delay_time:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0xD
   338   00000E                     	ds	2
   339   000010                     
   340                           ; 1 bytes @ 0xF
   341   000010                     	ds	2
   342   000012                     
   343                           ; 2 bytes @ 0x11
   344   000012                     	ds	2
   345   000014                     
   346                           ; 1 bytes @ 0x13
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 126 in file "newmain.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;  argc            2   15[COMRAM] int 
   355 ;;  argv            2   17[COMRAM] PTR PTR unsigned char 
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  2   15[COMRAM] int 
   360 ;; Registers used:
   361 ;;		wreg, status,2, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   367 ;;      Params:         4       0       0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0       0       0
   370 ;;      Totals:         4       0       0       0       0       0       0
   371 ;;Total ram usage:        4 bytes
   372 ;; Hardware stack levels required when called: 3
   373 ;; This function calls:
   374 ;;		_init_adc
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text0
   381   0006C2                     __ptext0:
   382                           	callstack 0
   383   0006C2                     _main:
   384                           	callstack 28
   385   0006C2  0EC0               	movlw	192
   386   0006C4  6E95               	movwf	149,c	;volatile
   387   0006C6                     
   388                           ;newmain.c: 138:     PORTD = 0b00000000;
   389   0006C6  6A83               	clrf	131,c	;volatile
   390   0006C8                     
   391                           ;newmain.c: 141:     init_adc();
   392   0006C8  EC8D  F003         	call	_init_adc	;wreg free
   393   0006CC                     
   394                           ;newmain.c: 144:     INTCONbits.GIE = 1;
   395   0006CC  8EF2               	bsf	242,7,c	;volatile
   396   0006CE                     
   397                           ;newmain.c: 145:     INTCONbits.PEIE = 1;
   398   0006CE  8CF2               	bsf	242,6,c	;volatile
   399   0006D0                     
   400                           ;newmain.c: 148:     TRISBbits.TRISB0 = 1;
   401   0006D0  8093               	bsf	147,0,c	;volatile
   402   0006D2                     
   403                           ;newmain.c: 149:     INTCONbits.INT0IE = 1;
   404   0006D2  88F2               	bsf	242,4,c	;volatile
   405   0006D4                     
   406                           ;newmain.c: 150:     INTCON2bits.INTEDG0 = 0;
   407   0006D4  9CF1               	bcf	241,6,c	;volatile
   408   0006D6                     
   409                           ;newmain.c: 151:     INTCONbits.INT0IF = 0;
   410   0006D6  92F2               	bcf	242,1,c	;volatile
   411   0006D8                     
   412                           ;newmain.c: 154:     TRISBbits.TRISB1 = 1;
   413   0006D8  8293               	bsf	147,1,c	;volatile
   414   0006DA                     
   415                           ;newmain.c: 155:     INTCON3bits.INT1IE = 1;
   416   0006DA  86F0               	bsf	240,3,c	;volatile
   417   0006DC                     
   418                           ;newmain.c: 156:     INTCON2bits.INTEDG1 = 0;
   419   0006DC  9AF1               	bcf	241,5,c	;volatile
   420   0006DE                     
   421                           ;newmain.c: 157:     INTCON3bits.INT1IF = 0;
   422   0006DE  90F0               	bcf	240,0,c	;volatile
   423   0006E0                     
   424                           ;newmain.c: 160:     TRISBbits.TRISB2 = 1;
   425   0006E0  8493               	bsf	147,2,c	;volatile
   426   0006E2                     
   427                           ;newmain.c: 161:     INTCON3bits.INT2IE = 1;
   428   0006E2  88F0               	bsf	240,4,c	;volatile
   429   0006E4                     
   430                           ;newmain.c: 162:     INTCON2bits.INTEDG2 = 0;
   431   0006E4  98F1               	bcf	241,4,c	;volatile
   432   0006E6                     
   433                           ;newmain.c: 163:     INTCON3bits.INT2IF = 0;
   434   0006E6  92F0               	bcf	240,1,c	;volatile
   435   0006E8                     
   436                           ;newmain.c: 166:     INTCON2bits.RBPU = 0;
   437   0006E8  9EF1               	bcf	241,7,c	;volatile
   438   0006EA                     l75:
   439   0006EA  EF75  F003         	goto	l75
   440   0006EE  EF93  F001         	goto	start
   441   0006F2                     __end_of_main:
   442                           	callstack 0
   443                           
   444 ;; *************** function _init_adc *****************
   445 ;; Defined at:
   446 ;;		line 28 in file "newmain.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   460 ;;      Params:         0       0       0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; Hardware stack levels required when called: 2
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text1
   475   00071A                     __ptext1:
   476                           	callstack 0
   477   00071A                     _init_adc:
   478                           	callstack 28
   479   00071A                     
   480                           ;newmain.c: 29: void delay_ms(unsigned int ms) {
   481   00071A  8092               	bsf	146,0,c	;volatile
   482   00071C                     
   483                           ;newmain.c: 30:     unsigned int i, j;
   484   00071C  0EC3               	movlw	-61
   485   00071E  16C2               	andwf	194,f,c	;volatile
   486                           
   487                           ;newmain.c: 31:     for(i = 0; i < ms; i++) {
   488   000720  0E0E               	movlw	14
   489   000722  6EC1               	movwf	193,c	;volatile
   490   000724                     
   491                           ;newmain.c: 32:         for(j = 0; j < 250; j++) {
   492   000724  8EC0               	bsf	192,7,c	;volatile
   493                           
   494                           ;newmain.c: 33: 
   495   000726  50C0               	movf	192,w,c	;volatile
   496   000728  0BC7               	andlw	-57
   497   00072A  0910               	iorlw	16
   498   00072C  6EC0               	movwf	192,c	;volatile
   499                           
   500                           ;newmain.c: 34: 
   501   00072E  50C0               	movf	192,w,c	;volatile
   502   000730  0BF8               	andlw	-8
   503   000732  0902               	iorlw	2
   504   000734  6EC0               	movwf	192,c	;volatile
   505   000736                     
   506                           ;newmain.c: 35:             __asm("NOP");
   507   000736  80C2               	bsf	194,0,c	;volatile
   508   000738  0012               	return		;funcret
   509   00073A                     __end_of_init_adc:
   510                           	callstack 0
   511                           
   512 ;; *************** function _ISR *****************
   513 ;; Defined at:
   514 ;;		line 58 in file "newmain.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  delay_time      2   13[COMRAM] unsigned int 
   519 ;;  adc_value       2   11[COMRAM] unsigned int 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   529 ;;      Params:         0       0       0       0       0       0       0
   530 ;;      Locals:         4       0       0       0       0       0       0
   531 ;;      Temps:          4       0       0       0       0       0       0
   532 ;;      Totals:         8       0       0       0       0       0       0
   533 ;;Total ram usage:        8 bytes
   534 ;; Hardware stack levels used: 1
   535 ;; Hardware stack levels required when called: 1
   536 ;; This function calls:
   537 ;;		___lwdiv
   538 ;;		_delay_ms
   539 ;;		_read_adc
   540 ;; This function is called by:
   541 ;;		Interrupt level 2
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	intcode
   546   000008                     __pintcode:
   547                           	callstack 0
   548   000008                     _ISR:
   549                           	callstack 28
   550                           
   551                           ;incstack = 0
   552   000008  821A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   553   00000A  CFF3 F00A          	movff	prodl,??_ISR+2
   554   00000E  CFF4 F00B          	movff	prodh,??_ISR+3
   555   000012                     
   556                           ;newmain.c: 59:         RD0 = !RD1;
   557   000012  EC79  F003         	call	_read_adc	;wreg free
   558   000016  C001  F00C         	movff	?_read_adc,ISR@adc_value
   559   00001A  C002  F00D         	movff	?_read_adc+1,ISR@adc_value+1
   560   00001E                     
   561                           ;newmain.c: 60:         delay_ms(1);
   562   00001E  0E14               	movlw	20
   563   000020  020C               	mulwf	ISR@adc_value^0,c
   564   000022  CFF3 F008          	movff	prodl,??_ISR
   565   000026  CFF4 F009          	movff	prodh,??_ISR+1
   566   00002A  020D               	mulwf	(ISR@adc_value+1)^0,c
   567   00002C  50F3               	movf	prodl,w,c
   568   00002E  2609               	addwf	(??_ISR+1)^0,f,c
   569   000030  C008  F001         	movff	??_ISR,___lwdiv@dividend
   570   000034  C009  F002         	movff	??_ISR+1,___lwdiv@dividend+1
   571   000038  0E03               	movlw	3
   572   00003A  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   573   00003C  6803               	setf	___lwdiv@divisor^0,c
   574   00003E  EC01  F003         	call	___lwdiv	;wreg free
   575   000042  C001  F00E         	movff	?___lwdiv,ISR@delay_time
   576   000046  C002  F00F         	movff	?___lwdiv+1,ISR@delay_time+1
   577   00004A                     
   578                           ;newmain.c: 63:         INTCONbits.INT0IF = 0;
   579   00004A  A2F2               	btfss	242,1,c	;volatile
   580   00004C  EF2A  F000         	goto	i2u61_41
   581   000050  EF2C  F000         	goto	i2u61_40
   582   000054                     i2u61_41:
   583   000054  EF61  F000         	goto	i2l992
   584   000058                     i2u61_40:
   585   000058  5018               	movf	_toggleR^0,w,c	;volatile
   586   00005A  1019               	iorwf	(_toggleR+1)^0,w,c	;volatile
   587   00005C  A4D8               	btfss	status,2,c
   588   00005E  EF33  F000         	goto	i2u62_41
   589   000062  EF35  F000         	goto	i2u62_40
   590   000066                     i2u62_41:
   591   000066  EF61  F000         	goto	i2l992
   592   00006A                     i2u62_40:
   593   00006A                     
   594                           ;newmain.c: 65: 
   595   00006A  C00E  F001         	movff	ISR@delay_time,delay_ms@ms
   596   00006E  C00F  F002         	movff	ISR@delay_time+1,delay_ms@ms+1
   597   000072  EC3B  F003         	call	_delay_ms	;wreg free
   598   000076                     
   599                           ;newmain.c: 66: 
   600   000076  A083               	btfss	3971,0,c	;volatile
   601   000078  EF40  F000         	goto	i2u63_41
   602   00007C  EF43  F000         	goto	i2u63_40
   603   000080                     i2u63_41:
   604   000080  8083               	bsf	3971,0,c	;volatile
   605   000082  EF44  F000         	goto	i2u64_45
   606   000086                     i2u63_40:
   607   000086  9083               	bcf	3971,0,c	;volatile
   608   000088                     i2u64_45:
   609                           
   610                           ;newmain.c: 67: 
   611   000088  0E00               	movlw	0
   612   00008A  6E02               	movwf	(delay_ms@ms+1)^0,c
   613   00008C  0E01               	movlw	1
   614   00008E  6E01               	movwf	delay_ms@ms^0,c
   615   000090  EC3B  F003         	call	_delay_ms	;wreg free
   616   000094                     
   617                           ;newmain.c: 68:     if (INTCON3bits.INT1IF == 1 && toggleS == 0) {
   618   000094  A083               	btfss	3971,0,c	;volatile
   619   000096  EF4F  F000         	goto	i2u65_41
   620   00009A  EF52  F000         	goto	i2u65_40
   621   00009E                     i2u65_41:
   622   00009E  8083               	bsf	3971,0,c	;volatile
   623   0000A0  EF53  F000         	goto	i2u66_45
   624   0000A4                     i2u65_40:
   625   0000A4  9083               	bcf	3971,0,c	;volatile
   626   0000A6                     i2u66_45:
   627   0000A6                     
   628                           ;newmain.c: 69: 
   629   0000A6  5018               	movf	_toggleR^0,w,c	;volatile
   630   0000A8  1019               	iorwf	(_toggleR+1)^0,w,c	;volatile
   631   0000AA  B4D8               	btfsc	status,2,c
   632   0000AC  EF5A  F000         	goto	i2u67_41
   633   0000B0  EF5D  F000         	goto	i2u67_40
   634   0000B4                     i2u67_41:
   635   0000B4  0E01               	movlw	1
   636   0000B6  EF5E  F000         	goto	i2u68_40
   637   0000BA                     i2u67_40:
   638   0000BA  0E00               	movlw	0
   639   0000BC                     i2u68_40:
   640   0000BC  6E18               	movwf	_toggleR^0,c	;volatile
   641   0000BE  6A19               	clrf	(_toggleR+1)^0,c	;volatile
   642   0000C0                     
   643                           ;newmain.c: 70:         delay_ms(delay_time);
   644   0000C0  92F2               	bcf	242,1,c	;volatile
   645   0000C2                     i2l992:
   646                           
   647                           ;newmain.c: 73:         RD2 = !RD2;
   648   0000C2  A2F2               	btfss	242,1,c	;volatile
   649   0000C4  EF66  F000         	goto	i2u69_41
   650   0000C8  EF68  F000         	goto	i2u69_40
   651   0000CC                     i2u69_41:
   652   0000CC  EF9D  F000         	goto	i2l1006
   653   0000D0                     i2u69_40:
   654   0000D0  0418               	decf	_toggleR^0,w,c	;volatile
   655   0000D2  1019               	iorwf	(_toggleR+1)^0,w,c	;volatile
   656   0000D4  A4D8               	btfss	status,2,c
   657   0000D6  EF6F  F000         	goto	i2u70_41
   658   0000DA  EF71  F000         	goto	i2u70_40
   659   0000DE                     i2u70_41:
   660   0000DE  EF9D  F000         	goto	i2l1006
   661   0000E2                     i2u70_40:
   662   0000E2                     
   663                           ;newmain.c: 75:         INTCON3bits.INT1IF = 0;
   664   0000E2  C00E  F001         	movff	ISR@delay_time,delay_ms@ms
   665   0000E6  C00F  F002         	movff	ISR@delay_time+1,delay_ms@ms+1
   666   0000EA  EC3B  F003         	call	_delay_ms	;wreg free
   667   0000EE                     
   668                           ;newmain.c: 76:     }
   669   0000EE  A283               	btfss	3971,1,c	;volatile
   670   0000F0  EF7C  F000         	goto	i2u71_41
   671   0000F4  EF7F  F000         	goto	i2u71_40
   672   0000F8                     i2u71_41:
   673   0000F8  8083               	bsf	3971,0,c	;volatile
   674   0000FA  EF80  F000         	goto	i2u72_45
   675   0000FE                     i2u71_40:
   676   0000FE  9083               	bcf	3971,0,c	;volatile
   677   000100                     i2u72_45:
   678                           
   679                           ;newmain.c: 77:     if (INTCON3bits.INT1IF == 1 && toggleS == 1) {
   680   000100  0E00               	movlw	0
   681   000102  6E02               	movwf	(delay_ms@ms+1)^0,c
   682   000104  0E01               	movlw	1
   683   000106  6E01               	movwf	delay_ms@ms^0,c
   684   000108  EC3B  F003         	call	_delay_ms	;wreg free
   685   00010C                     
   686                           ;newmain.c: 78: 
   687   00010C  A283               	btfss	3971,1,c	;volatile
   688   00010E  EF8B  F000         	goto	i2u73_41
   689   000112  EF8E  F000         	goto	i2u73_40
   690   000116                     i2u73_41:
   691   000116  8083               	bsf	3971,0,c	;volatile
   692   000118  EF8F  F000         	goto	i2u74_45
   693   00011C                     i2u73_40:
   694   00011C  9083               	bcf	3971,0,c	;volatile
   695   00011E                     i2u74_45:
   696   00011E                     
   697                           ;newmain.c: 79:         delay_ms(delay_time);
   698   00011E  5018               	movf	_toggleR^0,w,c	;volatile
   699   000120  1019               	iorwf	(_toggleR+1)^0,w,c	;volatile
   700   000122  B4D8               	btfsc	status,2,c
   701   000124  EF96  F000         	goto	i2u75_41
   702   000128  EF99  F000         	goto	i2u75_40
   703   00012C                     i2u75_41:
   704   00012C  0E01               	movlw	1
   705   00012E  EF9A  F000         	goto	i2u76_40
   706   000132                     i2u75_40:
   707   000132  0E00               	movlw	0
   708   000134                     i2u76_40:
   709   000134  6E18               	movwf	_toggleR^0,c	;volatile
   710   000136  6A19               	clrf	(_toggleR+1)^0,c	;volatile
   711   000138                     
   712                           ;newmain.c: 80:         RD2 = !RD3;
   713   000138  92F2               	bcf	242,1,c	;volatile
   714   00013A                     i2l1006:
   715                           
   716                           ;newmain.c: 85:     }
   717   00013A  A0F0               	btfss	240,0,c	;volatile
   718   00013C  EFA2  F000         	goto	i2u77_41
   719   000140  EFA4  F000         	goto	i2u77_40
   720   000144                     i2u77_41:
   721   000144  EFD9  F000         	goto	i2l1020
   722   000148                     i2u77_40:
   723   000148  5016               	movf	_toggleS^0,w,c	;volatile
   724   00014A  1017               	iorwf	(_toggleS+1)^0,w,c	;volatile
   725   00014C  A4D8               	btfss	status,2,c
   726   00014E  EFAB  F000         	goto	i2u78_41
   727   000152  EFAD  F000         	goto	i2u78_40
   728   000156                     i2u78_41:
   729   000156  EFD9  F000         	goto	i2l1020
   730   00015A                     i2u78_40:
   731   00015A                     
   732                           ;newmain.c: 87: 
   733   00015A  C00E  F001         	movff	ISR@delay_time,delay_ms@ms
   734   00015E  C00F  F002         	movff	ISR@delay_time+1,delay_ms@ms+1
   735   000162  EC3B  F003         	call	_delay_ms	;wreg free
   736   000166                     
   737                           ;newmain.c: 88: 
   738   000166  A483               	btfss	3971,2,c	;volatile
   739   000168  EFB8  F000         	goto	i2u79_41
   740   00016C  EFBB  F000         	goto	i2u79_40
   741   000170                     i2u79_41:
   742   000170  8483               	bsf	3971,2,c	;volatile
   743   000172  EFBC  F000         	goto	i2u80_45
   744   000176                     i2u79_40:
   745   000176  9483               	bcf	3971,2,c	;volatile
   746   000178                     i2u80_45:
   747                           
   748                           ;newmain.c: 89:     if (INTCON3bits.INT2IF == 1 && toggleT == 0) {
   749   000178  0E00               	movlw	0
   750   00017A  6E02               	movwf	(delay_ms@ms+1)^0,c
   751   00017C  0E01               	movlw	1
   752   00017E  6E01               	movwf	delay_ms@ms^0,c
   753   000180  EC3B  F003         	call	_delay_ms	;wreg free
   754   000184                     
   755                           ;newmain.c: 90: 
   756   000184  A483               	btfss	3971,2,c	;volatile
   757   000186  EFC7  F000         	goto	i2u81_41
   758   00018A  EFCA  F000         	goto	i2u81_40
   759   00018E                     i2u81_41:
   760   00018E  8483               	bsf	3971,2,c	;volatile
   761   000190  EFCB  F000         	goto	i2u82_45
   762   000194                     i2u81_40:
   763   000194  9483               	bcf	3971,2,c	;volatile
   764   000196                     i2u82_45:
   765   000196                     
   766                           ;newmain.c: 91:         delay_ms(delay_time);
   767   000196  5016               	movf	_toggleS^0,w,c	;volatile
   768   000198  1017               	iorwf	(_toggleS+1)^0,w,c	;volatile
   769   00019A  B4D8               	btfsc	status,2,c
   770   00019C  EFD2  F000         	goto	i2u83_41
   771   0001A0  EFD5  F000         	goto	i2u83_40
   772   0001A4                     i2u83_41:
   773   0001A4  0E01               	movlw	1
   774   0001A6  EFD6  F000         	goto	i2u84_40
   775   0001AA                     i2u83_40:
   776   0001AA  0E00               	movlw	0
   777   0001AC                     i2u84_40:
   778   0001AC  6E16               	movwf	_toggleS^0,c	;volatile
   779   0001AE  6A17               	clrf	(_toggleS+1)^0,c	;volatile
   780   0001B0                     
   781                           ;newmain.c: 92:         RD4 = !RD4;
   782   0001B0  90F0               	bcf	240,0,c	;volatile
   783   0001B2                     i2l1020:
   784                           
   785                           ;newmain.c: 94:         RD4 = !RD4;
   786   0001B2  A0F0               	btfss	240,0,c	;volatile
   787   0001B4  EFDE  F000         	goto	i2u85_41
   788   0001B8  EFE0  F000         	goto	i2u85_40
   789   0001BC                     i2u85_41:
   790   0001BC  EF15  F001         	goto	i2l1034
   791   0001C0                     i2u85_40:
   792   0001C0  0416               	decf	_toggleS^0,w,c	;volatile
   793   0001C2  1017               	iorwf	(_toggleS+1)^0,w,c	;volatile
   794   0001C4  A4D8               	btfss	status,2,c
   795   0001C6  EFE7  F000         	goto	i2u86_41
   796   0001CA  EFE9  F000         	goto	i2u86_40
   797   0001CE                     i2u86_41:
   798   0001CE  EF15  F001         	goto	i2l1034
   799   0001D2                     i2u86_40:
   800   0001D2                     
   801                           ;newmain.c: 96:         INTCON3bits.INT2IF = 0;
   802   0001D2  C00E  F001         	movff	ISR@delay_time,delay_ms@ms
   803   0001D6  C00F  F002         	movff	ISR@delay_time+1,delay_ms@ms+1
   804   0001DA  EC3B  F003         	call	_delay_ms	;wreg free
   805   0001DE                     
   806                           ;newmain.c: 97:     }
   807   0001DE  A683               	btfss	3971,3,c	;volatile
   808   0001E0  EFF4  F000         	goto	i2u87_41
   809   0001E4  EFF7  F000         	goto	i2u87_40
   810   0001E8                     i2u87_41:
   811   0001E8  8483               	bsf	3971,2,c	;volatile
   812   0001EA  EFF8  F000         	goto	i2u88_45
   813   0001EE                     i2u87_40:
   814   0001EE  9483               	bcf	3971,2,c	;volatile
   815   0001F0                     i2u88_45:
   816                           
   817                           ;newmain.c: 98:     if (INTCON3bits.INT2IF == 1 && toggleT == 1) {
   818   0001F0  0E00               	movlw	0
   819   0001F2  6E02               	movwf	(delay_ms@ms+1)^0,c
   820   0001F4  0E01               	movlw	1
   821   0001F6  6E01               	movwf	delay_ms@ms^0,c
   822   0001F8  EC3B  F003         	call	_delay_ms	;wreg free
   823   0001FC                     
   824                           ;newmain.c: 99: 
   825   0001FC  A683               	btfss	3971,3,c	;volatile
   826   0001FE  EF03  F001         	goto	i2u89_41
   827   000202  EF06  F001         	goto	i2u89_40
   828   000206                     i2u89_41:
   829   000206  8483               	bsf	3971,2,c	;volatile
   830   000208  EF07  F001         	goto	i2u90_45
   831   00020C                     i2u89_40:
   832   00020C  9483               	bcf	3971,2,c	;volatile
   833   00020E                     i2u90_45:
   834   00020E                     
   835                           ;newmain.c: 100:         delay_ms(delay_time);
   836   00020E  5016               	movf	_toggleS^0,w,c	;volatile
   837   000210  1017               	iorwf	(_toggleS+1)^0,w,c	;volatile
   838   000212  B4D8               	btfsc	status,2,c
   839   000214  EF0E  F001         	goto	i2u91_41
   840   000218  EF11  F001         	goto	i2u91_40
   841   00021C                     i2u91_41:
   842   00021C  0E01               	movlw	1
   843   00021E  EF12  F001         	goto	i2u92_40
   844   000222                     i2u91_40:
   845   000222  0E00               	movlw	0
   846   000224                     i2u92_40:
   847   000224  6E16               	movwf	_toggleS^0,c	;volatile
   848   000226  6A17               	clrf	(_toggleS+1)^0,c	;volatile
   849   000228                     
   850                           ;newmain.c: 101:         RD4 = !RD5;
   851   000228  90F0               	bcf	240,0,c	;volatile
   852   00022A                     i2l1034:
   853                           
   854                           ;newmain.c: 106:     }
   855   00022A  A2F0               	btfss	240,1,c	;volatile
   856   00022C  EF1A  F001         	goto	i2u93_41
   857   000230  EF1C  F001         	goto	i2u93_40
   858   000234                     i2u93_41:
   859   000234  EF51  F001         	goto	i2l1048
   860   000238                     i2u93_40:
   861   000238  5014               	movf	_toggleT^0,w,c	;volatile
   862   00023A  1015               	iorwf	(_toggleT+1)^0,w,c	;volatile
   863   00023C  A4D8               	btfss	status,2,c
   864   00023E  EF23  F001         	goto	i2u94_41
   865   000242  EF25  F001         	goto	i2u94_40
   866   000246                     i2u94_41:
   867   000246  EF51  F001         	goto	i2l1048
   868   00024A                     i2u94_40:
   869   00024A                     
   870                           ;newmain.c: 108: 
   871   00024A  C00E  F001         	movff	ISR@delay_time,delay_ms@ms
   872   00024E  C00F  F002         	movff	ISR@delay_time+1,delay_ms@ms+1
   873   000252  EC3B  F003         	call	_delay_ms	;wreg free
   874   000256                     
   875                           ;newmain.c: 109: int main(int argc, char** argv) {
   876   000256  A883               	btfss	3971,4,c	;volatile
   877   000258  EF30  F001         	goto	i2u95_41
   878   00025C  EF33  F001         	goto	i2u95_40
   879   000260                     i2u95_41:
   880   000260  8883               	bsf	3971,4,c	;volatile
   881   000262  EF34  F001         	goto	i2u96_45
   882   000266                     i2u95_40:
   883   000266  9883               	bcf	3971,4,c	;volatile
   884   000268                     i2u96_45:
   885                           
   886                           ;newmain.c: 110: 
   887   000268  0E00               	movlw	0
   888   00026A  6E02               	movwf	(delay_ms@ms+1)^0,c
   889   00026C  0E01               	movlw	1
   890   00026E  6E01               	movwf	delay_ms@ms^0,c
   891   000270  EC3B  F003         	call	_delay_ms	;wreg free
   892   000274                     
   893                           ;newmain.c: 111: 
   894   000274  A883               	btfss	3971,4,c	;volatile
   895   000276  EF3F  F001         	goto	i2u97_41
   896   00027A  EF42  F001         	goto	i2u97_40
   897   00027E                     i2u97_41:
   898   00027E  8883               	bsf	3971,4,c	;volatile
   899   000280  EF43  F001         	goto	i2u98_45
   900   000284                     i2u97_40:
   901   000284  9883               	bcf	3971,4,c	;volatile
   902   000286                     i2u98_45:
   903   000286                     
   904                           ;newmain.c: 112:     TRISD = 0b11000000;
   905   000286  5014               	movf	_toggleT^0,w,c	;volatile
   906   000288  1015               	iorwf	(_toggleT+1)^0,w,c	;volatile
   907   00028A  B4D8               	btfsc	status,2,c
   908   00028C  EF4A  F001         	goto	i2u99_41
   909   000290  EF4D  F001         	goto	i2u99_40
   910   000294                     i2u99_41:
   911   000294  0E01               	movlw	1
   912   000296  EF4E  F001         	goto	i2u100_40
   913   00029A                     i2u99_40:
   914   00029A  0E00               	movlw	0
   915   00029C                     i2u100_40:
   916   00029C  6E14               	movwf	_toggleT^0,c	;volatile
   917   00029E  6A15               	clrf	(_toggleT+1)^0,c	;volatile
   918   0002A0  92F0               	bcf	240,1,c	;volatile
   919   0002A2                     i2l1048:
   920   0002A2  A2F0               	btfss	240,1,c	;volatile
   921   0002A4  EF56  F001         	goto	i2u101_41
   922   0002A8  EF58  F001         	goto	i2u101_40
   923   0002AC                     i2u101_41:
   924   0002AC  EF8D  F001         	goto	i2l70
   925   0002B0                     i2u101_40:
   926   0002B0  0414               	decf	_toggleT^0,w,c	;volatile
   927   0002B2  1015               	iorwf	(_toggleT+1)^0,w,c	;volatile
   928   0002B4  A4D8               	btfss	status,2,c
   929   0002B6  EF5F  F001         	goto	i2u102_41
   930   0002BA  EF61  F001         	goto	i2u102_40
   931   0002BE                     i2u102_41:
   932   0002BE  EF8D  F001         	goto	i2l70
   933   0002C2                     i2u102_40:
   934   0002C2  C00E  F001         	movff	ISR@delay_time,delay_ms@ms
   935   0002C6  C00F  F002         	movff	ISR@delay_time+1,delay_ms@ms+1
   936   0002CA  EC3B  F003         	call	_delay_ms	;wreg free
   937   0002CE  AA83               	btfss	3971,5,c	;volatile
   938   0002D0  EF6C  F001         	goto	i2u103_41
   939   0002D4  EF6F  F001         	goto	i2u103_40
   940   0002D8                     i2u103_41:
   941   0002D8  8883               	bsf	3971,4,c	;volatile
   942   0002DA  EF70  F001         	goto	i2u104_45
   943   0002DE                     i2u103_40:
   944   0002DE  9883               	bcf	3971,4,c	;volatile
   945   0002E0                     i2u104_45:
   946   0002E0  0E00               	movlw	0
   947   0002E2  6E02               	movwf	(delay_ms@ms+1)^0,c
   948   0002E4  0E01               	movlw	1
   949   0002E6  6E01               	movwf	delay_ms@ms^0,c
   950   0002E8  EC3B  F003         	call	_delay_ms	;wreg free
   951   0002EC  AA83               	btfss	3971,5,c	;volatile
   952   0002EE  EF7B  F001         	goto	i2u105_41
   953   0002F2  EF7E  F001         	goto	i2u105_40
   954   0002F6                     i2u105_41:
   955   0002F6  8883               	bsf	3971,4,c	;volatile
   956   0002F8  EF7F  F001         	goto	i2u106_45
   957   0002FC                     i2u105_40:
   958   0002FC  9883               	bcf	3971,4,c	;volatile
   959   0002FE                     i2u106_45:
   960   0002FE  5014               	movf	_toggleT^0,w,c	;volatile
   961   000300  1015               	iorwf	(_toggleT+1)^0,w,c	;volatile
   962   000302  B4D8               	btfsc	status,2,c
   963   000304  EF86  F001         	goto	i2u107_41
   964   000308  EF89  F001         	goto	i2u107_40
   965   00030C                     i2u107_41:
   966   00030C  0E01               	movlw	1
   967   00030E  EF8A  F001         	goto	i2u108_40
   968   000312                     i2u107_40:
   969   000312  0E00               	movlw	0
   970   000314                     i2u108_40:
   971   000314  6E14               	movwf	_toggleT^0,c	;volatile
   972   000316  6A15               	clrf	(_toggleT+1)^0,c	;volatile
   973   000318  92F0               	bcf	240,1,c	;volatile
   974   00031A                     i2l70:
   975   00031A  C00B  FFF4         	movff	??_ISR+3,prodh
   976   00031E  C00A  FFF3         	movff	??_ISR+2,prodl
   977   000322  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   978   000324  0011               	retfie		f
   979   000326                     __end_of_ISR:
   980                           	callstack 0
   981                           
   982 ;; *************** function _read_adc *****************
   983 ;; Defined at:
   984 ;;		line 39 in file "newmain.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  2    0[COMRAM] unsigned int 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   998 ;;      Params:         2       0       0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0       0       0
  1000 ;;      Temps:          2       0       0       0       0       0       0
  1001 ;;      Totals:         4       0       0       0       0       0       0
  1002 ;;Total ram usage:        4 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_ISR
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text3
  1012   0006F2                     __ptext3:
  1013                           	callstack 0
  1014   0006F2                     _read_adc:
  1015                           	callstack 28
  1016   0006F2                     
  1017                           ;newmain.c: 40: 
  1018   0006F2  82C2               	bsf	194,1,c	;volatile
  1019   0006F4                     i2l48:
  1020   0006F4  B2C2               	btfsc	194,1,c	;volatile
  1021   0006F6  EF7F  F003         	goto	i2u55_41
  1022   0006FA  EF81  F003         	goto	i2u55_40
  1023   0006FE                     i2u55_41:
  1024   0006FE  EF7A  F003         	goto	i2l48
  1025   000702                     i2u55_40:
  1026   000702                     
  1027                           ;newmain.c: 42:     unsigned int adc_value = read_adc();
  1028   000702  50C3               	movf	195,w,c	;volatile
  1029   000704  CFC4 F003          	movff	4036,??_read_adc	;volatile
  1030   000708  6A04               	clrf	(??_read_adc+1)^0,c
  1031   00070A  C003  F004         	movff	??_read_adc,??_read_adc+1
  1032   00070E  6A03               	clrf	??_read_adc^0,c
  1033   000710  1003               	iorwf	??_read_adc^0,w,c
  1034   000712  6E01               	movwf	?_read_adc^0,c
  1035   000714  5004               	movf	(??_read_adc+1)^0,w,c
  1036   000716  6E02               	movwf	(?_read_adc+1)^0,c
  1037   000718  0012               	return		;funcret
  1038   00071A                     __end_of_read_adc:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _delay_ms *****************
  1042 ;; Defined at:
  1043 ;;		line 46 in file "newmain.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  ms              2    0[COMRAM] unsigned int 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  j               2    4[COMRAM] unsigned int 
  1048 ;;  i               2    2[COMRAM] unsigned int 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1058 ;;      Params:         2       0       0       0       0       0       0
  1059 ;;      Locals:         4       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0
  1061 ;;      Totals:         6       0       0       0       0       0       0
  1062 ;;Total ram usage:        6 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_ISR
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text4
  1072   000676                     __ptext4:
  1073                           	callstack 0
  1074   000676                     _delay_ms:
  1075                           	callstack 28
  1076   000676                     
  1077                           ;newmain.c: 47: ;newmain.c: 48:         delay_ms(delay_time);
  1078   000676  0E00               	movlw	0
  1079   000678  6E04               	movwf	(delay_ms@i+1)^0,c
  1080   00067A  0E00               	movlw	0
  1081   00067C  6E03               	movwf	delay_ms@i^0,c
  1082   00067E  EF55  F003         	goto	i2l950
  1083   000682                     i2l938:
  1084                           
  1085                           ;newmain.c: 49:         RD0 = !RD0;
  1086   000682  0E00               	movlw	0
  1087   000684  6E06               	movwf	(delay_ms@j+1)^0,c
  1088   000686  0E00               	movlw	0
  1089   000688  6E05               	movwf	delay_ms@j^0,c
  1090   00068A                     i2l56:
  1091   00068A  0000               	nop		;# 
  1092   00068C                     
  1093                           ;newmain.c: 53:         INTCONbits.INT0IF = 0;
  1094   00068C  4A05               	infsnz	delay_ms@j^0,f,c
  1095   00068E  2A06               	incf	(delay_ms@j+1)^0,f,c
  1096   000690  5006               	movf	(delay_ms@j+1)^0,w,c
  1097   000692  E109               	bnz	i2u56_40
  1098   000694  0EFA               	movlw	250
  1099   000696  5C05               	subwf	delay_ms@j^0,w,c
  1100   000698  A0D8               	btfss	status,0,c
  1101   00069A  EF51  F003         	goto	i2u56_41
  1102   00069E  EF53  F003         	goto	i2u56_40
  1103   0006A2                     i2u56_41:
  1104   0006A2  EF45  F003         	goto	i2l56
  1105   0006A6                     i2u56_40:
  1106   0006A6                     
  1107                           ;newmain.c: 54:     }
  1108   0006A6  4A03               	infsnz	delay_ms@i^0,f,c
  1109   0006A8  2A04               	incf	(delay_ms@i+1)^0,f,c
  1110   0006AA                     i2l950:
  1111   0006AA  5001               	movf	delay_ms@ms^0,w,c
  1112   0006AC  5C03               	subwf	delay_ms@i^0,w,c
  1113   0006AE  5002               	movf	(delay_ms@ms+1)^0,w,c
  1114   0006B0  5804               	subwfb	(delay_ms@i+1)^0,w,c
  1115   0006B2  A0D8               	btfss	status,0,c
  1116   0006B4  EF5E  F003         	goto	i2u57_41
  1117   0006B8  EF60  F003         	goto	i2u57_40
  1118   0006BC                     i2u57_41:
  1119   0006BC  EF41  F003         	goto	i2l938
  1120   0006C0                     i2u57_40:
  1121   0006C0  0012               	return		;funcret
  1122   0006C2                     __end_of_delay_ms:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function ___lwdiv *****************
  1126 ;; Defined at:
  1127 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  dividend        2    0[COMRAM] unsigned int 
  1130 ;;  divisor         2    2[COMRAM] unsigned int 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  quotient        2    4[COMRAM] unsigned int 
  1133 ;;  counter         1    6[COMRAM] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2    0[COMRAM] unsigned int 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         4       0       0       0       0       0       0
  1144 ;;      Locals:         3       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         7       0       0       0       0       0       0
  1147 ;;Total ram usage:        7 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_ISR
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text5
  1157   000602                     __ptext5:
  1158                           	callstack 0
  1159   000602                     ___lwdiv:
  1160                           	callstack 28
  1161   000602  0E00               	movlw	0
  1162   000604  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1163   000606  0E00               	movlw	0
  1164   000608  6E05               	movwf	___lwdiv@quotient^0,c
  1165   00060A  5003               	movf	___lwdiv@divisor^0,w,c
  1166   00060C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1167   00060E  B4D8               	btfsc	status,2,c
  1168   000610  EF0C  F003         	goto	i2u58_41
  1169   000614  EF0E  F003         	goto	i2u58_40
  1170   000618                     i2u58_41:
  1171   000618  EF36  F003         	goto	i2l572
  1172   00061C                     i2u58_40:
  1173   00061C  0E01               	movlw	1
  1174   00061E  6E07               	movwf	___lwdiv@counter^0,c
  1175   000620  EF16  F003         	goto	i2l960
  1176   000624                     i2l958:
  1177   000624  90D8               	bcf	status,0,c
  1178   000626  3603               	rlcf	___lwdiv@divisor^0,f,c
  1179   000628  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1180   00062A  2A07               	incf	___lwdiv@counter^0,f,c
  1181   00062C                     i2l960:
  1182   00062C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1183   00062E  EF1B  F003         	goto	i2u59_41
  1184   000632  EF1D  F003         	goto	i2u59_40
  1185   000636                     i2u59_41:
  1186   000636  EF12  F003         	goto	i2l958
  1187   00063A                     i2u59_40:
  1188   00063A                     i2l962:
  1189   00063A  90D8               	bcf	status,0,c
  1190   00063C  3605               	rlcf	___lwdiv@quotient^0,f,c
  1191   00063E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1192   000640  5003               	movf	___lwdiv@divisor^0,w,c
  1193   000642  5C01               	subwf	___lwdiv@dividend^0,w,c
  1194   000644  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1195   000646  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1196   000648  A0D8               	btfss	status,0,c
  1197   00064A  EF29  F003         	goto	i2u60_41
  1198   00064E  EF2B  F003         	goto	i2u60_40
  1199   000652                     i2u60_41:
  1200   000652  EF30  F003         	goto	i2l970
  1201   000656                     i2u60_40:
  1202   000656  5003               	movf	___lwdiv@divisor^0,w,c
  1203   000658  5E01               	subwf	___lwdiv@dividend^0,f,c
  1204   00065A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1205   00065C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1206   00065E  8005               	bsf	___lwdiv@quotient^0,0,c
  1207   000660                     i2l970:
  1208   000660  90D8               	bcf	status,0,c
  1209   000662  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1210   000664  3203               	rrcf	___lwdiv@divisor^0,f,c
  1211   000666  2E07               	decfsz	___lwdiv@counter^0,f,c
  1212   000668  EF1D  F003         	goto	i2l962
  1213   00066C                     i2l572:
  1214   00066C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1215   000670  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1216   000674  0012               	return		;funcret
  1217   000676                     __end_of___lwdiv:
  1218                           	callstack 0
  1219                           
  1220                           	psect	smallconst
  1221   000600                     __psmallconst:
  1222                           	callstack 0
  1223   000600  00                 	db	0
  1224   000601  00                 	db	0	; dummy byte at the end
  1225   000600                     __smallconst    set	__psmallconst
  1226   000600                     __mediumconst   set	__psmallconst
  1227   000000                     __activetblptr  equ	0
  1228                           
  1229                           	psect	rparam
  1230   000001                     ___rparam_used  equ	1
  1231   000000                     ___param_bank   equ	0
  1232   000000                     __Lparam        equ	__Lrparam
  1233   000000                     __Hparam        equ	__Hrparam
  1234                           
  1235                           	psect	temp
  1236   00001A                     btemp:
  1237                           	callstack 0
  1238   00001A                     	ds	1
  1239   00001A                     int$flags       set	btemp
  1240   00001B                     wtemp8          set	btemp+1
  1241   00001B                     ttemp5          set	btemp+1
  1242   00001E                     ttemp6          set	btemp+4
  1243   000022                     ttemp7          set	btemp+8
  1244                           
  1245                           	psect	config
  1246                           
  1247                           ; Padding undefined space
  1248   300000                     	org	3145728
  1249   300000  FF                 	db	255
  1250                           
  1251                           ;Config register CONFIG1H @ 0x300001
  1252                           ;	Oscillator Selection bits
  1253                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1254                           ;	Fail-Safe Clock Monitor Enable bit
  1255                           ;	FCMEN = 0x0, unprogrammed default
  1256                           ;	Internal/External Oscillator Switchover bit
  1257                           ;	IESO = 0x0, unprogrammed default
  1258   300001                     	org	3145729
  1259   300001  08                 	db	8
  1260                           
  1261                           ;Config register CONFIG2L @ 0x300002
  1262                           ;	unspecified, using default values
  1263                           ;	Power-up Timer Enable bit
  1264                           ;	PWRT = 0x1, unprogrammed default
  1265                           ;	Brown-out Reset Enable bits
  1266                           ;	BOREN = 0x3, unprogrammed default
  1267                           ;	Brown Out Reset Voltage bits
  1268                           ;	BORV = 0x3, unprogrammed default
  1269   300002                     	org	3145730
  1270   300002  1F                 	db	31
  1271                           
  1272                           ;Config register CONFIG2H @ 0x300003
  1273                           ;	Watchdog Timer Enable bit
  1274                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1275                           ;	Watchdog Timer Postscale Select bits
  1276                           ;	WDTPS = 0xF, unprogrammed default
  1277   300003                     	org	3145731
  1278   300003  1E                 	db	30
  1279                           
  1280                           ;Config register CONFIG4L @ 0x300006
  1281                           ;	Stack Full/Underflow Reset Enable bit
  1282                           ;	STVREN = 0x1, unprogrammed default
  1283                           ;	Single-Supply ICSP Enable bit
  1284                           ;	LVP = OFF, Single-Supply ICSP disabled
  1285                           ;	Extended Instruction Set Enable bit
  1286                           ;	XINST = 0x0, unprogrammed default
  1287                           ;	Background Debugger Enable bit
  1288                           ;	DEBUG = 0x1, unprogrammed default
  1289   300006                     	org	3145734
  1290   300006  81                 	db	129
  1291                           
  1292                           ; Padding undefined space
  1293   300007                     	org	3145735
  1294   300007  FF                 	db	255
  1295                           tosu	equ	0xFFF
  1296                           tosh	equ	0xFFE
  1297                           tosl	equ	0xFFD
  1298                           stkptr	equ	0xFFC
  1299                           pclatu	equ	0xFFB
  1300                           pclath	equ	0xFFA
  1301                           pcl	equ	0xFF9
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           prodh	equ	0xFF4
  1307                           prodl	equ	0xFF3
  1308                           indf0	equ	0xFEF
  1309                           postinc0	equ	0xFEE
  1310                           postdec0	equ	0xFED
  1311                           preinc0	equ	0xFEC
  1312                           plusw0	equ	0xFEB
  1313                           fsr0h	equ	0xFEA
  1314                           fsr0l	equ	0xFE9
  1315                           wreg	equ	0xFE8
  1316                           indf1	equ	0xFE7
  1317                           postinc1	equ	0xFE6
  1318                           postdec1	equ	0xFE5
  1319                           preinc1	equ	0xFE4
  1320                           plusw1	equ	0xFE3
  1321                           fsr1h	equ	0xFE2
  1322                           fsr1l	equ	0xFE1
  1323                           bsr	equ	0xFE0
  1324                           indf2	equ	0xFDF
  1325                           postinc2	equ	0xFDE
  1326                           postdec2	equ	0xFDD
  1327                           preinc2	equ	0xFDC
  1328                           plusw2	equ	0xFDB
  1329                           fsr2h	equ	0xFDA
  1330                           fsr2l	equ	0xFD9
  1331                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     19      25
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4       0
                                             15 COMRAM     4     0      4
                           _init_adc
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  8     8      0     424
                                              7 COMRAM     8     8      0
                            ___lwdiv
                           _delay_ms
                           _read_adc
 ---------------------------------------------------------------------------------
 (3) _read_adc                                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             6     4      2     104
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     164
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_adc

 _ISR (ROOT)
   ___lwdiv
   _delay_ms
   _read_adc

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     19      25     19.8%
BITBIGSFRlh         62      0       0      0.0%
BITBIGSFRh          61      0       0      0.0%
BITBIGSFRll          3      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      25      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jul 16 08:39:16 2025

                     l45 0738                       l75 06EA                       l76 06EA  
                    l760 0736                      l754 071A                      l756 071C  
                    l758 0724                      _RD0 7C18                      _RD1 7C19  
                    _RD2 7C1A                      _RD3 7C1B                      _RD4 7C1C  
                    _RD5 7C1D                      _ISR 0008                     ?_ISR 0001  
                   l1070 06CE                     l1062 06C2                     l1080 06D8  
                   l1072 06D0                     l1064 06C6                     l1090 06E2  
                   l1082 06DA                     l1074 06D2                     l1066 06C8  
                   l1092 06E4                     l1084 06DC                     l1076 06D4  
                   l1068 06CC                     l1094 06E6                     l1086 06DE  
                   l1078 06D6                     l1096 06E8                     l1088 06E0  
                   i2l51 0718                     i2l70 031A                     i2l56 068A  
                   i2l48 06F4                     i2l59 06C0                     _main 06C2  
                   btemp 001A                     prodh 0FF4                     prodl 0FF3  
                   start 0326             ___param_bank 0000                    ??_ISR 0008  
                  ?_main 0010            ISR@delay_time 000E          __end_of___lwdiv 0676  
                  i2l572 066C                    i2l930 06F2                    i2l579 0674  
                  i2l932 0702                    i2l950 06AA                    i2l960 062C  
                  i2l952 0602                    i2l944 068C                    i2l936 0676  
                  i2l970 0660                    i2l962 063A                    i2l954 060A  
                  i2l946 0690                    i2l938 0682                    i2l972 0666  
                  i2l964 0640                    i2l956 061C                    i2l948 06A6  
                  i2l980 0058                    i2l966 0656                    i2l958 0624  
                  i2l990 00C0                    i2l982 006A                    i2l974 0012  
                  i2l968 065E                    i2l984 0076                    i2l992 00C2  
                  i2l976 001E                    i2l994 00D0                    i2l986 0094  
                  i2l978 004A                    i2l996 00E2                    i2l988 00A6  
                  i2l998 00EE                    _PORTD 0F83                    _TRISD 0F95  
                  ttemp5 001B                    ttemp6 001E                    ttemp7 0022  
                  status 0FD8                    wtemp8 001B          __initialization 073A  
           __end_of_main 06F2                   ??_main 0014            __activetblptr 0000  
                 _ADCON1 0FC1                   _ADRESH 0FC4                   _ADRESL 0FC3  
                 i2l1000 010C                   i2l1010 015A                   i2l1002 011E  
                 i2l1012 0166                   i2l1020 01B2                   i2l1004 0138  
                 i2l1030 020E                   i2l1022 01C0                   i2l1014 0184  
                 i2l1006 013A                   i2l1040 0256                   i2l1032 0228  
                 i2l1024 01D2                   i2l1016 0196                   i2l1008 0148  
                 i2l1050 02B0                   i2l1042 0274                   i2l1026 01DE  
                 i2l1034 022A                   i2l1018 01B0                   i2l1060 0318  
                 i2l1052 02C2                   i2l1044 0286                   i2l1036 0238  
                 i2l1028 01FC                   i2l1054 02CE                   i2l1046 02A0  
                 i2l1038 024A                   i2l1056 02EC                   i2l1048 02A2  
                 i2l1058 02FE         __end_of_delay_ms 06C2                ??___lwdiv 0005  
       __end_of_init_adc 073A         __end_of_read_adc 071A                   isa$std 0001  
           __mediumconst 0600               __accesstop 0080  __end_of__initialization 0746  
          ___rparam_used 0001           __pcstackCOMRAM 0001                ?_delay_ms 0001  
                i2u60_40 0656                  i2u60_41 0652                  i2u61_40 0058  
                i2u61_41 0054                  i2u70_40 00E2                  i2u62_40 006A  
                i2u70_41 00DE                  i2u62_41 0066                  i2u55_40 0702  
                i2u71_40 00FE                  i2u63_40 0086                  i2u55_41 06FE  
                i2u71_41 00F8                  i2u63_41 0080                  i2u56_40 06A6  
                i2u56_41 06A2                  i2u80_45 0178                  i2u72_45 0100  
                i2u64_45 0088                  i2u57_40 06C0                  i2u81_40 0194  
                i2u73_40 011C                  i2u65_40 00A4                  i2u57_41 06BC  
                i2u81_41 018E                  i2u73_41 0116                  i2u65_41 009E  
                i2u58_40 061C                  i2u58_41 0618                  i2u90_45 020E  
                i2u82_45 0196                  i2u74_45 011E                  i2u66_45 00A6  
                i2u59_40 063A                  i2u91_40 0222                  i2u83_40 01AA  
                i2u75_40 0132                  i2u67_40 00BA                  i2u59_41 0636  
                i2u91_41 021C                  i2u83_41 01A4                  i2u75_41 012C  
                i2u67_41 00B4                  i2u92_40 0224                  i2u84_40 01AC  
                i2u76_40 0134                  i2u68_40 00BC                  i2u93_40 0238  
                i2u85_40 01C0                  i2u77_40 0148                  i2u69_40 00D0  
                i2u93_41 0234                  i2u85_41 01BC                  i2u77_41 0144  
                i2u69_41 00CC                  i2u94_40 024A                  i2u86_40 01D2  
                i2u78_40 015A                  i2u94_41 0246                  i2u86_41 01CE  
                i2u78_41 0156                  i2u95_40 0266                  i2u87_40 01EE  
                i2u79_40 0176                  i2u95_41 0260                  i2u87_41 01E8  
                i2u79_41 0170                  i2u96_45 0268                  i2u88_45 01F0  
                i2u97_40 0284                  i2u89_40 020C                  i2u97_41 027E  
                i2u89_41 0206                  i2u98_45 0286                  i2u99_40 029A  
                i2u99_41 0294                ?_init_adc 0001                ?_read_adc 0001  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 0602  
           __psmallconst 0600                  __pcinit 073A                  __ramtop 0600  
                __ptext0 06C2                  __ptext1 071A                  __ptext3 06F2  
                __ptext4 0676                  __ptext5 0602               ??_delay_ms 0003  
                _toggleR 0018                  _toggleS 0016                  _toggleT 0014  
             delay_ms@ms 0001     end_of_initialization 0746               ??_init_adc 0010  
             ??_read_adc 0003                _TRISAbits 0F92                _TRISBbits 0F93  
           ISR@adc_value 000C      start_initialization 073A              __end_of_ISR 0326  
            __pbssCOMRAM 0014         ___lwdiv@dividend 0001                __pintcode 0008  
               ?___lwdiv 0001              __smallconst 0600         ___lwdiv@quotient 0005  
              delay_ms@i 0003                delay_ms@j 0005                 i2u100_40 029C  
               i2u101_40 02B0                 i2u101_41 02AC                 i2u102_40 02C2  
               i2u102_41 02BE                 i2u103_40 02DE                 i2u103_41 02D8  
               i2u104_45 02E0                 i2u105_40 02FC                 i2u105_41 02F6  
               i2u106_45 02FE                 i2u107_40 0312                 i2u107_41 030C  
               i2u108_40 0314               _ADCON0bits 0FC2               _ADCON2bits 0FC0  
            _INTCON2bits 0FF1              _INTCON3bits 0FF0                 __Hrparam 0000  
               __Lrparam 0000                 _delay_ms 0676          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 _init_adc 071A                 _read_adc 06F2  
               isa$xinst 0000                 int$flags 001A                 main@argc 0010  
               main@argv 0012               _INTCONbits 0FF2                 intlevel2 0000  
